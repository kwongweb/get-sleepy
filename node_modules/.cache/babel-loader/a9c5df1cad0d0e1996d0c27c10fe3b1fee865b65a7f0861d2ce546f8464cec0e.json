{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobyw\\\\Documents\\\\478-breathing-timer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst phases = [{\n  name: \"Inhale\",\n  duration: 4\n}, {\n  name: \"Hold\",\n  duration: 7\n}, {\n  name: \"Exhale\",\n  duration: 8\n}];\nfunction getTodayKey() {\n  return new Date().toLocaleDateString(\"en-CA\", {\n    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone\n  });\n}\nfunction updateLocalStorage(minutes) {\n  const key = getTodayKey();\n  const data = JSON.parse(localStorage.getItem(\"breathingHistory\") || \"{}\");\n  data[key] = (data[key] || 0) + minutes;\n  localStorage.setItem(\"breathingHistory\", JSON.stringify(data));\n}\nfunction fadeOutAudio(audioRef, duration = 1000) {\n  const audio = audioRef.current;\n  const step = 0.05;\n  const fadeInterval = duration / (1 / step);\n  const fade = setInterval(() => {\n    if (audio.volume > step) {\n      audio.volume -= step;\n    } else {\n      audio.volume = 1;\n      audio.pause();\n      audio.currentTime = 0;\n      clearInterval(fade);\n    }\n  }, fadeInterval);\n}\nexport default function BreathingApp() {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [meditationTime, setMeditationTime] = useState(1); // in minutes\n  const [elapsed, setElapsed] = useState(0);\n  const [phaseIndex, setPhaseIndex] = useState(0);\n  const [phaseTimeLeft, setPhaseTimeLeft] = useState(phases[0].duration);\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const [sessionComplete, setSessionComplete] = useState(false);\n  const intervalRef = useRef(null);\n  const inhaleAudio = useRef(new Audio(\"/inhale.mp3\"));\n  const exhaleAudio = useRef(new Audio(\"/exhale.mp3\"));\n  const stopAllSounds = () => {\n    fadeOutAudio(inhaleAudio);\n    fadeOutAudio(exhaleAudio);\n  };\n  const playAudioForPhase = phaseName => {\n    if (phaseName === \"Inhale\") {\n      inhaleAudio.current.pause();\n      inhaleAudio.current.currentTime = 0;\n      inhaleAudio.current.volume = 1;\n      inhaleAudio.current.play();\n    }\n    if (phaseName === \"Exhale\") {\n      exhaleAudio.current.pause();\n      exhaleAudio.current.currentTime = 0;\n      exhaleAudio.current.volume = 1;\n      exhaleAudio.current.play();\n    }\n  };\n  useEffect(() => {\n    if (isRunning && !sessionComplete) {\n      intervalRef.current = setInterval(() => {\n        setPhaseTimeLeft(prev => {\n          if (prev > 1) return prev - 1;\n          setPhaseIndex(prevIndex => {\n            const nextIndex = (prevIndex + 1) % phases.length;\n            const nextPhase = phases[nextIndex];\n            setPhaseTimeLeft(nextPhase.duration);\n            stopAllSounds();\n            playAudioForPhase(nextPhase.name);\n            if (nextIndex === 0) {\n              setElapsed(prevElapsed => {\n                const nextElapsed = prevElapsed + phases.reduce((a, b) => a + b.duration, 0);\n                if (nextElapsed >= meditationTime * 60) {\n                  setIsRunning(false);\n                  setSessionComplete(true);\n                  updateLocalStorage(meditationTime);\n                  stopAllSounds();\n                }\n                return nextElapsed;\n              });\n            }\n            return nextIndex;\n          });\n          return 0;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, meditationTime, sessionComplete]);\n  const startMeditation = () => {\n    stopAllSounds();\n    setElapsed(0);\n    setPhaseIndex(0);\n    setPhaseTimeLeft(phases[0].duration);\n    setIsRunning(true);\n    setSessionStarted(true);\n    setSessionComplete(false);\n    playAudioForPhase(\"Inhale\");\n  };\n  const togglePause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const todayKey = getTodayKey();\n  const history = JSON.parse(localStorage.getItem(\"breathingHistory\") || \"{}\");\n  const todayMinutes = history[todayKey] || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-2\",\n      children: \"Time to Get Sleepy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6 text-sm text-gray-400\",\n      children: [\"Today\\u2019s total: \", todayMinutes, \" minute(s)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 text-lg text-center\",\n        children: \"Duration (minutes)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: meditationTime,\n        onChange: e => setMeditationTime(Number(e.target.value)),\n        min: 1,\n        className: \"w-full p-3 rounded bg-black text-white text-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), !isRunning && !sessionStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-xl text-xl\",\n      onClick: startMeditation,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl mb-2\",\n        children: phases[phaseIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-5xl font-bold mb-4\",\n        children: [phaseTimeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mb-4\",\n        children: [\"Time elapsed: \", Math.floor(elapsed / 60), \":\", (elapsed % 60).toString().padStart(2, \"0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-yellow-500 hover:bg-yellow-600 px-4 py-2 rounded-xl text-lg\",\n        onClick: togglePause,\n        children: isRunning ? \"Pause\" : \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), sessionComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl mt-4\",\n        children: \"Session complete. \\uD83E\\uDDD8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-xl text-xl\",\n        onClick: startMeditation,\n        children: \"Start Another Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(BreathingApp, \"y6n5RoJIHY8v8NtH1NrTq4Rmig4=\");\n_c = BreathingApp;\nvar _c;\n$RefreshReg$(_c, \"BreathingApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","phases","name","duration","getTodayKey","Date","toLocaleDateString","timeZone","Intl","DateTimeFormat","resolvedOptions","updateLocalStorage","minutes","key","data","JSON","parse","localStorage","getItem","setItem","stringify","fadeOutAudio","audioRef","audio","current","step","fadeInterval","fade","setInterval","volume","pause","currentTime","clearInterval","BreathingApp","_s","isRunning","setIsRunning","meditationTime","setMeditationTime","elapsed","setElapsed","phaseIndex","setPhaseIndex","phaseTimeLeft","setPhaseTimeLeft","sessionStarted","setSessionStarted","sessionComplete","setSessionComplete","intervalRef","inhaleAudio","Audio","exhaleAudio","stopAllSounds","playAudioForPhase","phaseName","play","prev","prevIndex","nextIndex","length","nextPhase","prevElapsed","nextElapsed","reduce","a","b","startMeditation","togglePause","todayKey","history","todayMinutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","min","onClick","Math","floor","toString","padStart","_c","$RefreshReg$"],"sources":["C:/Users/kobyw/Documents/478-breathing-timer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst phases = [\r\n  { name: \"Inhale\", duration: 4 },\r\n  { name: \"Hold\", duration: 7 },\r\n  { name: \"Exhale\", duration: 8 },\r\n];\r\n\r\nfunction getTodayKey() {\r\n  return new Date().toLocaleDateString(\"en-CA\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n}\r\n\r\nfunction updateLocalStorage(minutes) {\r\n  const key = getTodayKey();\r\n  const data = JSON.parse(localStorage.getItem(\"breathingHistory\") || \"{}\");\r\n  data[key] = (data[key] || 0) + minutes;\r\n  localStorage.setItem(\"breathingHistory\", JSON.stringify(data));\r\n}\r\n\r\nfunction fadeOutAudio(audioRef, duration = 1000) {\r\n  const audio = audioRef.current;\r\n  const step = 0.05;\r\n  const fadeInterval = duration / (1 / step);\r\n\r\n  const fade = setInterval(() => {\r\n    if (audio.volume > step) {\r\n      audio.volume -= step;\r\n    } else {\r\n      audio.volume = 1;\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n      clearInterval(fade);\r\n    }\r\n  }, fadeInterval);\r\n}\r\n\r\nexport default function BreathingApp() {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [meditationTime, setMeditationTime] = useState(1); // in minutes\r\n  const [elapsed, setElapsed] = useState(0);\r\n  const [phaseIndex, setPhaseIndex] = useState(0);\r\n  const [phaseTimeLeft, setPhaseTimeLeft] = useState(phases[0].duration);\r\n  const [sessionStarted, setSessionStarted] = useState(false);\r\n  const [sessionComplete, setSessionComplete] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const inhaleAudio = useRef(new Audio(\"/inhale.mp3\"));\r\n  const exhaleAudio = useRef(new Audio(\"/exhale.mp3\"));\r\n\r\n  const stopAllSounds = () => {\r\n    fadeOutAudio(inhaleAudio);\r\n    fadeOutAudio(exhaleAudio);\r\n  };\r\n\r\n  const playAudioForPhase = (phaseName) => {\r\n    if (phaseName === \"Inhale\") {\r\n      inhaleAudio.current.pause();\r\n      inhaleAudio.current.currentTime = 0;\r\n      inhaleAudio.current.volume = 1;\r\n      inhaleAudio.current.play();\r\n    }\r\n    if (phaseName === \"Exhale\") {\r\n      exhaleAudio.current.pause();\r\n      exhaleAudio.current.currentTime = 0;\r\n      exhaleAudio.current.volume = 1;\r\n      exhaleAudio.current.play();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRunning && !sessionComplete) {\r\n      intervalRef.current = setInterval(() => {\r\n        setPhaseTimeLeft((prev) => {\r\n          if (prev > 1) return prev - 1;\r\n\r\n          setPhaseIndex((prevIndex) => {\r\n            const nextIndex = (prevIndex + 1) % phases.length;\r\n            const nextPhase = phases[nextIndex];\r\n            setPhaseTimeLeft(nextPhase.duration);\r\n\r\n            stopAllSounds();\r\n            playAudioForPhase(nextPhase.name);\r\n\r\n            if (nextIndex === 0) {\r\n              setElapsed((prevElapsed) => {\r\n                const nextElapsed = prevElapsed + phases.reduce((a, b) => a + b.duration, 0);\r\n                if (nextElapsed >= meditationTime * 60) {\r\n                  setIsRunning(false);\r\n                  setSessionComplete(true);\r\n                  updateLocalStorage(meditationTime);\r\n                  stopAllSounds();\r\n                }\r\n                return nextElapsed;\r\n              });\r\n            }\r\n\r\n            return nextIndex;\r\n          });\r\n\r\n          return 0;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isRunning, meditationTime, sessionComplete]);\r\n\r\n  const startMeditation = () => {\r\n    stopAllSounds();\r\n    setElapsed(0);\r\n    setPhaseIndex(0);\r\n    setPhaseTimeLeft(phases[0].duration);\r\n    setIsRunning(true);\r\n    setSessionStarted(true);\r\n    setSessionComplete(false);\r\n    playAudioForPhase(\"Inhale\");\r\n  };\r\n\r\n  const togglePause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const todayKey = getTodayKey();\r\n  const history = JSON.parse(localStorage.getItem(\"breathingHistory\") || \"{}\");\r\n  const todayMinutes = history[todayKey] || 0;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-2\">Time to Get Sleepy</h1>\r\n      <p className=\"mb-6 text-sm text-gray-400\">Today’s total: {todayMinutes} minute(s)</p>\r\n\r\n      <div className=\"mb-6 w-full max-w-xs\">\r\n        <label className=\"block mb-2 text-lg text-center\">Duration (minutes)</label>\r\n        <input\r\n          type=\"number\"\r\n          value={meditationTime}\r\n          onChange={(e) => setMeditationTime(Number(e.target.value))}\r\n          min={1}\r\n          className=\"w-full p-3 rounded bg-black text-white text-xl\"\r\n        />\r\n      </div>\r\n\r\n      {!isRunning && !sessionStarted && (\r\n        <button\r\n          className=\"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-xl text-xl\"\r\n          onClick={startMeditation}\r\n        >\r\n          Start\r\n        </button>\r\n      )}\r\n\r\n      {isRunning && (\r\n        <div className=\"text-center\">\r\n          <p className=\"text-2xl mb-2\">{phases[phaseIndex].name}</p>\r\n          <p className=\"text-5xl font-bold mb-4\">{phaseTimeLeft}s</p>\r\n          <p className=\"text-sm mb-4\">\r\n            Time elapsed: {Math.floor(elapsed / 60)}:{(elapsed % 60).toString().padStart(2, \"0\")}\r\n          </p>\r\n          <button\r\n            className=\"bg-yellow-500 hover:bg-yellow-600 px-4 py-2 rounded-xl text-lg\"\r\n            onClick={togglePause}\r\n          >\r\n            {isRunning ? \"Pause\" : \"Resume\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {sessionComplete && (\r\n        <>\r\n          <p className=\"text-2xl mt-4\">Session complete. 🧘</p>\r\n          <button\r\n            className=\"mt-4 bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-xl text-xl\"\r\n            onClick={startMeditation}\r\n          >\r\n            Start Another Session\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}